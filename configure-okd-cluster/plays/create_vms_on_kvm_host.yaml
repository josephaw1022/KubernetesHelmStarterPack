---
- name: Configure and Deploy OKD VMs
  hosts: kvm_host
  become: true
  vars_files:
    - ../vars.yaml

  tasks:
    - name: Ensure ISO directory exists
      ansible.builtin.file:
        path: "{{ common_vm_config.iso_path | dirname }}"
        state: directory
        mode: '0755'

    - name: Check if Fedora CoreOS ISO exists
      stat:
        path: "{{ common_vm_config.iso_path }}"
      register: iso_stat

    - name: Download Fedora CoreOS ISO if not present
      get_url:
        url: "https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/40.20240709.3.1/x86_64/fedora-coreos-40.20240709.3.1-live.x86_64.iso"
        dest: "{{ common_vm_config.iso_path }}"
        mode: '0644'
      when: not iso_stat.stat.exists

    - name: Download ISO signature file if not present
      get_url:
        url: "https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/40.20240709.3.1/x86_64/fedora-coreos-40.20240709.3.1-live.x86_64.iso.sig"
        dest: "{{ common_vm_config.iso_path }}.sig"
        mode: '0644'

    - name: Download Fedora GPG key
      get_url:
        url: "https://fedoraproject.org/fedora.gpg"
        dest: "/tmp/fedora.gpg"
        mode: '0644'

    - name: Verify ISO signature
      shell: >
        gpgv --keyring /tmp/fedora.gpg
        {{ common_vm_config.iso_path }}.sig
        {{ common_vm_config.iso_path }}
      register: gpg_check
      changed_when: false
      failed_when: gpg_check.rc != 0
      when: not iso_stat.stat.exists

    - name: Download checksum file
      get_url:
        url: "https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/40.20240709.3.1/x86_64/fedora-coreos-40.20240709.3.1-live.x86_64.iso-CHECKSUM"
        dest: "{{ common_vm_config.iso_path }}-CHECKSUM"
        mode: '0644'
      when: not iso_stat.stat.exists

    - name: Verify ISO checksum
      shell: >
        sha256sum -c {{ common_vm_config.iso_path }}-CHECKSUM
      register: checksum_check
      changed_when: false
      failed_when: checksum_check.rc != 0
      when: not iso_stat.stat.exists

    - name: Create VLAN for OKD Cluster
      command: >
        nmcli connection add type vlan con-name okd-cluster-vlan
        dev {{ common_vm_config.network_bridge }} id {{ vlan_id }}
      ignore_errors: yes

    - name: Create and Configure VMs
      loop: "{{ vm_definitions }}"
      shell: |
        virt-install \
          --name {{ item.name }} \
          --memory {{ item.ram }} \
          --vcpus {{ common_vm_config.vcpu }} \
          --disk path=/var/lib/libvirt/images/{{ item.name }}.qcow2,size={{ item.storage }},format=qcow2 \
          --cdrom {{ common_vm_config.iso_path }} \
          --network bridge={{ common_vm_config.network_bridge }},model=virtio \
          --os-type linux \
          --os-variant fedora-coreos-stable \
          --noautoconsole \
          --noreboot \
          --import
      args:
        executable: /bin/bash
      register: output

    - name: Output VM creation result
      debug:
        var: output
